#Objective: To check whether the given data are a valley or hill using logistic regression.

#Data Source : The data is used from the YBI Foundation GitHub account.(https://raw.githubusercontent.com/YBIFoundation/Fundamental/main/Project_Outline.ipynb)

#IMPORT LIBRARY


import pandas as pd 
import numpy as np

#IMPORT DATA

hv=pd.read_csv('https://raw.githubusercontent.com/YBIFoundation/Dataset/main/Hill%20Valley%20Dataset.csv')

  #DESCRICBE DATA
hv.head()

hv.describe()

hv.info()

#DATA VISUALIZATION
hv.shape
hv.columns

#Define Target Variable (y) and Feature Variables (X)
y=hv['Class']
X=hv.drop('Class',axis=1)

  
#Data Preprocessing

from sklearn.preprocessing import StandardScaler
ss=StandardScaler()
X=ss.fit_transform(X)

  
#Train Test Split

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.7,stratify=y,random_state=2529)

#Model Train

from sklearn.linear_model import LogisticRegression
lr=LogisticRegression()
lr.fit(X_train,y_train)

#Model Prediction

y_pred=lr.predict(X_test)
y_pred

#Model Evaluation


from sklearn.metrics import confusion_matrix,classification_report
print(confusion_matrix(y_test,y_pred))
print(classification_report(y_test,y_pred))

#PREDICTION


X_new=hv.sample(1)
X_new

X_new=X_new.drop('Class',axis=1)
X_new
X_new=ss.fit_transform(X_new)
y_pred_new=lr.predict(X_new)
y_pred_new

lr.predict_proba(X_new)


#EXPLANATION Logistic regression is used for binary classification problems, where the goal is to predict one of two possible outcomes. In the context of hill and valley prediction, logistic regression can classify geographical areas as either "hill" or "valley" based on features like elevation, slope, and other environmental data.So we need only two answers whether its hill or valley.

